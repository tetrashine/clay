import Base from 'displays/base';
import Board from 'displays/board';
import Node from 'displays/node';
import { NodeConfig, LinkState, BoardConfig, BoardState } from 'types/index';
declare class Clay extends Base {
    private _dom;
    private _menu;
    private _board;
    private _mode;
    private _config;
    private _state;
    private _ActionFunctions;
    private _buttons;
    private _palettes;
    private _undoStates;
    private _redoStates;
    private _selected;
    private _selectedSvg;
    private menuCalibration;
    constructor(id: string, config: BoardConfig, state: BoardState);
    addNode(title: string, nodeConfig: NodeConfig, selection?: boolean): void;
    export(): BoardState;
    load(config: BoardConfig, state: BoardState): [any, any, Board];
    generate(doc: any, dom: any, config: BoardConfig, state: BoardState): Board;
    setConfig(config: BoardConfig): void;
    setState(state: BoardState): boolean;
    validate(state: BoardState): boolean;
    validateNode(node: NodeConfig): boolean;
    validateLink(link: LinkState): boolean;
    build(id: string, config: BoardConfig, state: BoardState): [any, any, Board];
    _build(id: string, config: BoardConfig, state: BoardState): [any, any, Board];
    _load(dom: any, config: BoardConfig, state: BoardState): [any, any, Board];
    createZoomLevelElement(doc: any): any;
    createHrElement(doc: any): any;
    createMenuElement(doc: any, icon: string, cancel?: string): any;
    createMenuBtnElement({ doc, svg, tooltip, onClick, execFn, cancelFn, cancelSvg, enable, }: {
        doc: any;
        svg: any;
        tooltip: string;
        onClick?: (evt: any) => void;
        execFn?: (evt: any) => void;
        cancelFn?: (evt: any) => void;
        cancelSvg?: string;
        enable?: boolean;
    }): any;
    enableMenuBtn(btn: any): void;
    disableMenuBtn(btn: any): void;
    applyDefault(config: BoardConfig): BoardConfig;
    initialize(): void;
    _menuCalibration(config?: BoardConfig): () => void;
    onKeyDown(e: any): void;
    onKeyUp(e: any): void;
    onMenuBtnClick(mode: number, svg: any, cursor?: string): () => void;
    onSelection(items: Node[]): void;
    save(): BoardConfig;
    subscribe(evt: any, callback: (evt: any) => void): void;
    drawEditMenu(doc: any, parent: any, config: BoardConfig): void;
    resetMenuBtns(): void;
}
export default Clay;
